type Result_2 = variant { Ok; Err : text };
type Result_3 = variant {
   Ok : record { nat; vec principal; nat8; nat; nat };
   Err : text;
};
type Result_4 = variant { Ok : nat64; Err : text };
type PoolInfo = record {
   i : nat;
   k : nat;
   base_reserve : nat;
   owner : principal;
   block_timestamp_last : nat64;
   pool_addr : principal;
   lp_amount : nat;
   pool_type : text;
   lp_lock : nat;
   quote_user : nat;
   lp_fee_rate : nat;
   base_token_decimals : nat8;
   quote_token_decimals : nat8;
   base_user : nat;
   quote_token : principal;
   base_price_cumulative_last : nat;
   quote_reserve : nat;
   base_token : principal;
   pool_status : PoolStatus;
   mt_fee_rate : nat;
   is_single_pool : bool;
   total_supply : nat;
   is_my_pool : bool;
};
type PoolStatus = variant {
   CREATE_BASE_INPUT;
   CREATE_QUOTE_INPUT;
   OFFLINE;
   ROLLBACK_UNDONE;
   CREATED;
   ROLLBACK_DONE;
   ONLINE;
};
service : (principal, principal) -> {
    swapTokenToToken : (
      principal,
      principal,
      nat,
      nat,
      vec principal,
      nat64,
      nat64,
    ) -> (Result_4);
    withdrawSubAccountToken : (principal, nat) -> (Result_2);
    getPoolsInfo : (principal) -> (vec PoolInfo) query;
    quote : (principal, principal, nat, nat64) -> (Result_3) query;
}
